{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0418\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442 \\u0432\\u0435\\u0449\\u0435\\u0439\\\\control_asick\\\\client\\\\src\\\\components\\\\Graf.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Line, Chart } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { getGraf } from \"../http/mainerAPI\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graf = () => {\n  _s();\n  const profit = [];\n  const expend = [];\n  const time = [];\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getGraf(id).then(data => {\n      for (var index = 0; index < data.length; ++index) {\n        profit.push(data[index].profit);\n        expend.push(data[index].expend);\n        time.push(data[index].createdAt);\n      }\n    });\n  }, []);\n  const lineChartData = {\n    labels: time,\n    datasets: [{\n      data: profit,\n      label: \"Доход\",\n      borderColor: \"#3333ff\",\n      backgroundColor: \"#3333ff\",\n      lineTension: 0.5\n    }, {\n      data: expend,\n      label: \"Расход\",\n      borderColor: \"#ff3333\",\n      backgroundColor: \"#ff3333\",\n      lineTension: 0.5\n    }\n    // {\n    //   data: [1316410, 1271390, 1577380,  1171390],\n    //   label: \"Прибыль\",\n    //   borderColor: \"#0DFC00\",\n    //   backgroundColor: \"#0DFC00\",\n    //   lineTension: 0.5\n    // }\n    ]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        type: \"line\",\n        options: {\n          title: {\n            display: true,\n            text: \"График работы машины:\",\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            //Is the legend shown?\n            position: \"top\" //Position of the legend.\n          }\n        },\n        data: lineChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Graf, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n_c = Graf;\nexport default Graf;\nvar _c;\n$RefreshReg$(_c, \"Graf\");","map":{"version":3,"names":["React","useEffect","useState","Card","Line","Chart","getGraf","useParams","jsxDEV","_jsxDEV","Graf","_s","profit","expend","time","id","then","data","index","length","push","createdAt","lineChartData","labels","datasets","label","borderColor","backgroundColor","lineTension","style","marginTop","children","type","options","title","display","text","fontSize","legend","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Интернет вещей/control_asick/client/src/components/Graf.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport { getGraf } from \"../http/mainerAPI\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst Graf = () => {\r\n    const profit = []\r\n    const expend = []\r\n    const time = []\r\n    const {id} = useParams()\r\n\r\n    useEffect(()=>{\r\n      getGraf(id).then(data => {\r\n        for (var index = 0; index < data.length; ++index) {\r\n          profit.push(data[index].profit)\r\n          expend.push(data[index].expend)\r\n          time.push(data[index].createdAt)\r\n        }\r\n      })\r\n    }, [])\r\n    \r\n\r\n    const lineChartData = {\r\n        labels: time,\r\n        datasets: [\r\n          {\r\n            data: profit,\r\n            label: \"Доход\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"#3333ff\",\r\n            lineTension: 0.5\r\n          },\r\n          {\r\n            data: expend,\r\n            label: \"Расход\",\r\n            borderColor: \"#ff3333\",\r\n            backgroundColor: \"#ff3333\",\r\n            lineTension: 0.5\r\n          }\r\n          // {\r\n          //   data: [1316410, 1271390, 1577380,  1171390],\r\n          //   label: \"Прибыль\",\r\n          //   borderColor: \"#0DFC00\",\r\n          //   backgroundColor: \"#0DFC00\",\r\n          //   lineTension: 0.5\r\n          // }\r\n        ]\r\n      };\r\n\r\n    return (\r\n        <div style={{marginTop: 100}}>\r\n            <Card>\r\n              <Line\r\n                type=\"line\"\r\n                options={{\r\n                  title: {\r\n                  display: true,\r\n                  text: \"График работы машины:\",\r\n                  fontSize: 20\r\n                },\r\n                  legend: {\r\n                  display: true, //Is the legend shown?\r\n                  position: \"top\" //Position of the legend.\r\n                }\r\n                }}\r\n                data={lineChartData}\r\n              />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graf;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,OAAO,eAAe;AACtB,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAMC,IAAI,GAAG,EAAE;EACf,MAAM;IAACC;EAAE,CAAC,GAAGR,SAAS,CAAC,CAAC;EAExBN,SAAS,CAAC,MAAI;IACZK,OAAO,CAACS,EAAE,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;MACvB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,IAAI,CAACE,MAAM,EAAE,EAAED,KAAK,EAAE;QAChDN,MAAM,CAACQ,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,CAACN,MAAM,CAAC;QAC/BC,MAAM,CAACO,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,CAACL,MAAM,CAAC;QAC/BC,IAAI,CAACM,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,CAACG,SAAS,CAAC;MAClC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,aAAa,GAAG;IAClBC,MAAM,EAAET,IAAI;IACZU,QAAQ,EAAE,CACR;MACEP,IAAI,EAAEL,MAAM;MACZa,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf,CAAC,EACD;MACEX,IAAI,EAAEJ,MAAM;MACZY,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA;EAEJ,CAAC;EAEH,oBACInB,OAAA;IAAKoB,KAAK,EAAE;MAACC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,eACzBtB,OAAA,CAACN,IAAI;MAAA4B,QAAA,eACHtB,OAAA,CAACL,IAAI;QACH4B,IAAI,EAAC,MAAM;QACXC,OAAO,EAAE;UACPC,KAAK,EAAE;YACPC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,uBAAuB;YAC7BC,QAAQ,EAAE;UACZ,CAAC;UACCC,MAAM,EAAE;YACRH,OAAO,EAAE,IAAI;YAAE;YACfI,QAAQ,EAAE,KAAK,CAAC;UAClB;QACA,CAAE;QACFtB,IAAI,EAAEK;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAhC,EAAA,CAjEKD,IAAI;EAAA,QAIOH,SAAS;AAAA;AAAAqC,EAAA,GAJpBlC,IAAI;AAmEV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}