{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fill2\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0418\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442 \\u0432\\u0435\\u0449\\u0435\\u0439\\\\control_asick\\\\client\\\\src\\\\components\\\\Graf.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Line, Chart } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport { getGraf } from \"../http/mainerAPI\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDat = async id => {\n  await getGraf(id).then(data => {\n    return data;\n  });\n};\nconst Graf = () => {\n  _s();\n  var graf;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    graf = getDat(id);\n  }, []);\n  console.log(graf);\n  // for (var index = 0; index < graf.length; ++index) {\n  //   console.log(graf[index]);\n  // }\n\n  const lineChartData = {\n    labels: [\"October\", \"November\", \"December\", \"Octoberr\"],\n    datasets: [{\n      data: [8137119, 9431691, 10266674, 9431691],\n      label: \"Доход\",\n      borderColor: \"#3333ff\",\n      backgroundColor: \"#3333ff\",\n      lineTension: 0.5\n    }, {\n      data: [1216410, 1371390, 1477380, 1371390],\n      label: \"Расход\",\n      borderColor: \"#ff3333\",\n      backgroundColor: \"#ff3333\",\n      lineTension: 0.5\n    }, {\n      data: [1316410, 1271390, 1577380, 1171390],\n      label: \"Прибыль\",\n      borderColor: \"#0DFC00\",\n      backgroundColor: \"#0DFC00\",\n      lineTension: 0.5\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        type: \"line\",\n        options: {\n          title: {\n            display: true,\n            text: \"График работы машины:\",\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            //Is the legend shown?\n            position: \"top\" //Position of the legend.\n          }\n        },\n        data: lineChartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Graf, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n_c = Graf;\nexport default Graf;\nvar _c;\n$RefreshReg$(_c, \"Graf\");","map":{"version":3,"names":["React","useEffect","Card","Line","Chart","getGraf","useParams","jsxDEV","_jsxDEV","getDat","id","then","data","Graf","_s","graf","console","log","lineChartData","labels","datasets","label","borderColor","backgroundColor","lineTension","style","marginTop","children","type","options","title","display","text","fontSize","legend","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fill2/OneDrive/Рабочий стол/Интернет вещей/control_asick/client/src/components/Graf.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Line, Chart } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport { getGraf } from \"../http/mainerAPI\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst getDat = async (id) =>{\r\n    await getGraf(id).then(data => {return data})\r\n}\r\n\r\n\r\nconst Graf = () => {\r\n    var graf\r\n    const {id} = useParams()\r\n\r\n    useEffect(()=>{\r\n       graf =  getDat(id)\r\n    }, [])\r\n    console.log(graf)\r\n    // for (var index = 0; index < graf.length; ++index) {\r\n    //   console.log(graf[index]);\r\n    // }\r\n    \r\n\r\n    const lineChartData = {\r\n        labels: [\"October\", \"November\", \"December\", \"Octoberr\"],\r\n        datasets: [\r\n          {\r\n            data: [8137119, 9431691, 10266674, 9431691],\r\n            label: \"Доход\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"#3333ff\",\r\n            lineTension: 0.5\r\n          },\r\n          {\r\n            data: [1216410, 1371390, 1477380,  1371390],\r\n            label: \"Расход\",\r\n            borderColor: \"#ff3333\",\r\n            backgroundColor: \"#ff3333\",\r\n            lineTension: 0.5\r\n          },\r\n          {\r\n            data: [1316410, 1271390, 1577380,  1171390],\r\n            label: \"Прибыль\",\r\n            borderColor: \"#0DFC00\",\r\n            backgroundColor: \"#0DFC00\",\r\n            lineTension: 0.5\r\n          }\r\n        ]\r\n      };\r\n\r\n    return (\r\n        <div style={{marginTop: 100}}>\r\n            <Card>\r\n              <Line\r\n                type=\"line\"\r\n                options={{\r\n                  title: {\r\n                  display: true,\r\n                  text: \"График работы машины:\",\r\n                  fontSize: 20\r\n                },\r\n                  legend: {\r\n                  display: true, //Is the legend shown?\r\n                  position: \"top\" //Position of the legend.\r\n                }\r\n                }}\r\n                data={lineChartData}\r\n              />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graf;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,OAAO,eAAe;AACtB,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAG,MAAOC,EAAE,IAAI;EACxB,MAAML,OAAO,CAACK,EAAE,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;IAAC,OAAOA,IAAI;EAAA,CAAC,CAAC;AACjD,CAAC;AAGD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAIC,IAAI;EACR,MAAM;IAACL;EAAE,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAExBL,SAAS,CAAC,MAAI;IACXc,IAAI,GAAIN,MAAM,CAACC,EAAE,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACNM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB;EACA;EACA;;EAGA,MAAMG,aAAa,GAAG;IAClBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IACvDC,QAAQ,EAAE,CACR;MACER,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;MAC3CS,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf,CAAC,EACD;MACEZ,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAG,OAAO,CAAC;MAC3CS,KAAK,EAAE,QAAQ;MACfC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf,CAAC,EACD;MACEZ,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAG,OAAO,CAAC;MAC3CS,KAAK,EAAE,SAAS;MAChBC,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAEH,oBACIhB,OAAA;IAAKiB,KAAK,EAAE;MAACC,SAAS,EAAE;IAAG,CAAE;IAAAC,QAAA,eACzBnB,OAAA,CAACN,IAAI;MAAAyB,QAAA,eACHnB,OAAA,CAACL,IAAI;QACHyB,IAAI,EAAC,MAAM;QACXC,OAAO,EAAE;UACPC,KAAK,EAAE;YACPC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE,uBAAuB;YAC7BC,QAAQ,EAAE;UACZ,CAAC;UACCC,MAAM,EAAE;YACRH,OAAO,EAAE,IAAI;YAAE;YACfI,QAAQ,EAAE,KAAK,CAAC;UAClB;QACA,CAAE;QACFvB,IAAI,EAAEM;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA7DKD,IAAI;EAAA,QAEOP,SAAS;AAAA;AAAAkC,EAAA,GAFpB3B,IAAI;AA+DV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}